// Generated by CoffeeScript 1.3.3
var Server, animation, chars, net,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

net = require('net');

animation = require('../assets/animation');

chars = require('../assets/characters');

Server = (function() {

  Server.prototype.clients = 0;

  function Server(port) {
    this.port = port;
    this.client = __bind(this.client, this);

    this.server = net.createServer(this.client);
    this.server.listen(this.port);
  }

  Server.prototype.client = function(con) {
    var frame, interval,
      _this = this;
    this.clients++;
    frame = 0;
    con.setEncoding('binary');
    con.on('end', function() {
      clearInterval(interval);
      return _this.clients--;
    });
    con.on('data', function(data) {
      switch (data.toString('utf8').trim()) {
        case 'q':
          return con.end();
        default:
          return console.log(data);
      }
    });
    return interval = setInterval(function() {
      if (frame === 12) {
        frame = 0;
      }
      return con.write(chars.clean + chars.end + animation[frame++]);
    }, 150);
  };

  return Server;

})();

module.exports = Server;
